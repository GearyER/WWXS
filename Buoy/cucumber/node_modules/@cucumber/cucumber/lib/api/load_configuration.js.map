{"version":3,"file":"load_configuration.js","sourceRoot":"","sources":["../../src/api/load_configuration.ts"],"names":[],"mappings":";;;AAKA,8DAAyD;AACzD,oDAIyB;AACzB,oFAA+E;AAC/E,mEAA8D;AAC9D,+CAAgD;AAEhD;;;;;;GAMG;AACI,KAAK,UAAU,iBAAiB,CACrC,UAAqC,EAAE,EACvC,cAA+B,EAAE;;IAEjC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAA,8BAAgB,EAAC,WAAW,CAAC,CAAA;IAClD,MAAM,UAAU,GAAG,MAAA,OAAO,CAAC,IAAI,mCAAI,IAAA,wBAAU,EAAC,GAAG,CAAC,CAAA;IAClD,MAAM,oBAAoB,GAAG,UAAU;QACrC,CAAC,CAAC,MAAM,IAAA,wBAAQ,EAAC,GAAG,EAAE,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC;QACnD,CAAC,CAAC,EAAE,CAAA;IACN,MAAM,QAAQ,GAAG,IAAA,mCAAmB,EAClC,qCAAqB,EACrB,oBAAoB,EACpB,OAAO,CAAC,QAAQ,CACjB,CAAA;IACD,IAAA,8CAAqB,EAAC,QAAQ,CAAC,CAAA;IAC/B,MAAM,QAAQ,GAAG,MAAM,IAAA,4CAAoB,EAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;IAC1D,OAAO;QACL,gBAAgB,EAAE,QAAQ;QAC1B,gBAAgB,EAAE,QAAQ;KAC3B,CAAA;AACH,CAAC;AApBD,8CAoBC","sourcesContent":["import {\n  IRunEnvironment,\n  IResolvedConfiguration,\n  ILoadConfigurationOptions,\n} from './types'\nimport { locateFile } from '../configuration/locate_file'\nimport {\n  DEFAULT_CONFIGURATION,\n  fromFile,\n  mergeConfigurations,\n} from '../configuration'\nimport { validateConfiguration } from '../configuration/validate_configuration'\nimport { convertConfiguration } from './convert_configuration'\nimport { mergeEnvironment } from './environment'\n\n/**\n * Load user-authored configuration to be used in a test run.\n *\n * @public\n * @param options - Coordinates required to find configuration.\n * @param environment - Project environment.\n */\nexport async function loadConfiguration(\n  options: ILoadConfigurationOptions = {},\n  environment: IRunEnvironment = {}\n): Promise<IResolvedConfiguration> {\n  const { cwd, env } = mergeEnvironment(environment)\n  const configFile = options.file ?? locateFile(cwd)\n  const profileConfiguration = configFile\n    ? await fromFile(cwd, configFile, options.profiles)\n    : {}\n  const original = mergeConfigurations(\n    DEFAULT_CONFIGURATION,\n    profileConfiguration,\n    options.provided\n  )\n  validateConfiguration(original)\n  const runnable = await convertConfiguration(original, env)\n  return {\n    useConfiguration: original,\n    runConfiguration: runnable,\n  }\n}\n"]}